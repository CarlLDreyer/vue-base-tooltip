import{_ as s,o as a,c as e,f as n}from"./app.7551b2c2.js";const u=JSON.parse('{"title":"Configuration","titleTemplate":"VueBaseTooltip","description":"","frontmatter":{"title":"Configuration","titleTemplate":"VueBaseTooltip"},"headers":[{"level":2,"title":"Placement","slug":"placement","link":"#placement","children":[]},{"level":2,"title":"Delay","slug":"delay","link":"#delay","children":[{"level":3,"title":"Plugin","slug":"plugin","link":"#plugin","children":[]},{"level":3,"title":"Advanced (Prop)","slug":"advanced-prop","link":"#advanced-prop","children":[]}]},{"level":2,"title":"Offset","slug":"offset","link":"#offset","children":[{"level":3,"title":"Plugin","slug":"plugin-1","link":"#plugin-1","children":[]},{"level":3,"title":"Advanced (Prop)","slug":"advanced-prop-1","link":"#advanced-prop-1","children":[]}]}],"relativePath":"guide/configuration.md"}'),l={name:"guide/configuration.md"},o=n(`<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h1><p>The following parameters can be configured.</p><h2 id="placement" tabindex="-1">Placement <a class="header-anchor" href="#placement" aria-hidden="true">#</a></h2><p>The placement of the tooltip can be configured using the directive modifier. For example, if you want your tooltips to have the position <code>top</code>:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">v-tooltip.top</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&#39;This is a tooltip top&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Button</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>The following placements are available:</p><ul><li><code>top</code></li><li><code>top-start</code></li><li><code>top-end</code></li><li><code>right</code></li><li><code>right-start</code></li><li><code>right-end</code></li><li><code>bottom</code></li><li><code>bottom-start</code></li><li><code>bottom-end</code></li><li><code>left</code></li><li><code>left-start</code></li><li><code>left-end</code></li></ul><p>When no placement is specific, the component will fallback to <code>auto</code>.</p><h2 id="delay" tabindex="-1">Delay <a class="header-anchor" href="#delay" aria-hidden="true">#</a></h2><p>Delay is the amount of time between the element has been interacted with (mouseover) and the tooltip has become visible. The delay can be configured differently depending on how you have implemented the library.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The unit of the delay is <code>ms</code> and the default value is <code>400</code>.</p></div><h3 id="plugin" tabindex="-1">Plugin <a class="header-anchor" href="#plugin" aria-hidden="true">#</a></h3><p>Simply pass the delay along the plugin installation:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki has-focused-lines"><code><span class="line has-focus"><span style="color:#676E95;">// main.ts/js </span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VueBaseTooltip</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-base-tooltip</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(VueBaseTooltip</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">delay</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">500</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span></span>
<span class="line"></span></code></pre></div><h3 id="advanced-prop" tabindex="-1">Advanced (Prop) <a class="header-anchor" href="#advanced-prop" aria-hidden="true">#</a></h3><p>In case you&#39;re directly using the component, you may simply pass the delay to the component as a prop:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki has-focused-lines"><code><span class="line has-focus"><span style="color:#A6ACCD;">// App.vue </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">RouterView</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line has-focus"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VTooltip</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">delay</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">500</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="offset" tabindex="-1">Offset <a class="header-anchor" href="#offset" aria-hidden="true">#</a></h2><p>Offset is the distance between the tooltip and the trigger element.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>The unit of the offset is <code>px</code> and the default value is <code>8</code>.</p></div><h3 id="plugin-1" tabindex="-1">Plugin <a class="header-anchor" href="#plugin-1" aria-hidden="true">#</a></h3><p>Simply pass the offset along the plugin installation:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki has-focused-lines"><code><span class="line has-focus"><span style="color:#676E95;">// main.ts/js </span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">VueBaseTooltip</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vue-base-tooltip</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#A6ACCD;">(VueBaseTooltip</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">offset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span></span>
<span class="line"></span></code></pre></div><h3 id="advanced-prop-1" tabindex="-1">Advanced (Prop) <a class="header-anchor" href="#advanced-prop-1" aria-hidden="true">#</a></h3><p>In case you&#39;re directly using the component, you may simply pass the offset to the component as a prop:</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki has-focused-lines"><code><span class="line has-focus"><span style="color:#A6ACCD;">// App.vue </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">RouterView</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line has-focus"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">VTooltip</span><span style="color:#89DDFF;"> :</span><span style="color:#C792EA;">offset</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,26),p=[o];function t(c,i,r,d,y,D){return a(),e("div",null,p)}const h=s(l,[["render",t]]);export{u as __pageData,h as default};
